# Generated by Django 4.2.7 on 2023-11-19 08:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="MMLUserInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("username", models.CharField(max_length=150, unique=True)),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female")], max_length=1
                    ),
                ),
                ("age_range", models.CharField(max_length=10)),
                (
                    "date_joined",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "mml_user_info",
            },
        ),
        migrations.CreateModel(
            name="MMLArtistGen",
            fields=[
                (
                    "artist",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
                ("priority", models.IntegerField()),
                ("genre", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "mml_artist_gen",
            },
        ),
        migrations.CreateModel(
            name="MMLMusicInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("artist", models.CharField(max_length=255)),
                ("genre", models.CharField(max_length=100)),
                ("lyrics", models.TextField()),
                ("album_image_url", models.URLField()),
            ],
            options={
                "db_table": "mml_music_info",
            },
        ),
        migrations.CreateModel(
            name="MMLMusicTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("artist", models.CharField(max_length=255)),
                ("tag", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "mml_music_tag",
            },
        ),
        migrations.CreateModel(
            name="MMLUserHis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user", models.CharField(max_length=150)),
                ("title", models.CharField(max_length=255)),
                ("artist", models.CharField(max_length=100)),
                ("genre", models.CharField(max_length=100)),
                ("playtime", models.IntegerField()),
                ("created_at", models.DateTimeField()),
            ],
            options={
                "db_table": "mml_user_his",
            },
        ),
        migrations.CreateModel(
            name="MMLUserLikeMusic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("artist", models.CharField(max_length=100)),
                (
                    "user",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="username",
                    ),
                ),
            ],
            options={
                "db_table": "mml_user_like_music",
            },
        ),
        migrations.CreateModel(
            name="MMLUserLikeArtist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("gen", models.CharField(max_length=10)),
                ("age_group", models.CharField(max_length=50)),
                (
                    "artist",
                    models.ForeignKey(
                        db_column="artist_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user.mmlartistgen",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        db_column="user_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="username",
                    ),
                ),
            ],
            options={
                "db_table": "mml_user_like_artist",
            },
        ),
        migrations.CreateModel(
            name="MMLUserGen",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("priority", models.IntegerField()),
                ("genre", models.CharField(max_length=100)),
                (
                    "username",
                    models.ForeignKey(
                        db_column="username",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        to_field="username",
                    ),
                ),
            ],
            options={
                "db_table": "mml_user_gen",
            },
        ),
    ]
